node ("")
{
    def maven = tool name: "maven3.8.5"
    try {
    stage("Initiation"){
        sh "echo Start of Ice Cream Shop Web app project."
    }
    stage("Git Clone"){
        sh "echo start git clone"
        git "https://github.com/ikechuqu/resume-project.git"
    }
    stage("Build"){
        sh "echo build the application with maven"
        sh "${maven}/bin/mvn clean package"
    }
    stage("Code Quality"){
        sh "echo performing code test with sonarqube"
        //sh "${maven}/bin/mvn sonar:sonar"
    }
    stage("Backup"){
        sh "echo backing up artifact"
        sh "${maven}/bin/mvn deploy"
    }
    stage("DeploytoUAT"){
       sh "echo deploy package to app server"
       deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://35.173.177.255:8080/')], contextPath: null, war: 'target/*.war'
    }
    stage("Approval"){
        sh "echo Approval needed"
        timeout(time:5,unit:'MINUTES'){
        input message:"Approval for Production"
        }
    }
    stage("DeploytoPROD"){
        sh "echo Deploying to Production Environment"
        //deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://35.173.177.255:8080/')], contextPath: null, war: 'target/*.war'
    }
    stage("Email Notification"){
        sh "echo sent email notification to DevOps team."
        emailext body: 'Pipeline build successful.', subject: 'Pipeline Build Success', to: 'iromedevs@gmail.com'
    }
    } catch (e) {
        // If there was an exception thrown, the build failed 
        currentBuild.result = "FAILED"
        throw e
    }finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
} 
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
